pipeline {
    agent any

    tools {
        maven 'maven'
    }

    stages {
        stage('Pull') {
            steps {
                git url: "https://github.com/AaronDownward/aaron-challenge2.git", branch: "dev"
                slackSend color: '#BADA55', message: 'Hello, World!'
            }
        }
        stage('Build') {
            steps {
                dir("maven-app") {
                    sh "mvn package"
                }
            }
        }
        stage("Sonar") {
            steps {
                dir("maven-app") {
                    withSonarQubeEnv("SonarCloud") {
                        sh "mvn verify sonar:sonar -Dsonar.scanner.force-deprecated-java-version=true"
                    }
                }
            }
        }
        stage("Push Docker Image") {
            steps {
                script {
                    dir("maven-app") {
                        docker.withTool("docker") {
                            repoId = "aarondownward/maven-app"
                            image = docker.build(repoId)
                            docker.withRegistry("https://registry.hub.docker.com", "dockerhub-cred") {
                                image.push()
                            }
                        }
                    }
                }
            }
        }
        stage("Deploy to Testing") {
            steps {
                dir("kube-deployments/testing") {
                    withKubeConfig([credentialsId: 'kubectl-creds', serverUrl: 'https://2C2916813F2F07E5F853B26BD8D4410C.gr7.us-east-2.eks.amazonaws.com']) {
                        sh 'kubectl apply -f .'
                        sh 'kubectl rollout restart deployment/simple-app -n build'
                    }
                }
            }
        }
    }

}